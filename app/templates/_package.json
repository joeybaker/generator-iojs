{
  "version": "0.0.0",
  "name": "<%= slugname %>",
  "description": "<%= props.description %>",
  "author": {
    "name": "<%= props.authorName %>",
    "email": "<%= props.authorEmail %>"<% if (props.authorUrl) { %>,
    "url": "<%= props.authorUrl %>"<% } %>
  },
  "repository": "<%= repoUrl %>",
  "license": "<%= props.license %>",
  "directories": {
    "test": "test"
  },
  "keywords": [
    "<%= keywords.join('",\n    "') %>"
  ],
  "scripts": {<% if (props.isServer) { %>
    "start": "<% if (props.isEs6) { %>babel-node<% } else { %>node<% } %> index<%= props.extension %>",<% } %><% if (props.isServerAndBrowser) { %>
    "test-browser": "browserify <% if (props.isEs6) { %>-t babelify<% } %> test/test<%= props.extension %> | tap-closer | smokestack -b chrome | tap-spec",
    "test-server": "<% if (props.isEs6) { %>babel-node<% } else { %>node<% } %> test/*<%= props.extension %> | tap-spec",
    "test": "npm run test-server && npm run test-browser",
    "tdd-server": "nodemon -x npm -i node_modules/ -- run test-server",
    "tdd-browser": "smokestack-watch test/*<%= props.extension %> <% if (props.isEs6) { %>-t babelify<% } %> | tap-spec",<% } %><% if (props.isBrowser && !props.isServer) { %>
    "test": "browserify <% if (props.isEs6) { %>-t babelify<% } %> test/test<%= props.extension %> | tap-closer | smokestack -b chrome | tap-spec",
    "tdd": "smokestack-watch test/*<%= props.extension %> <% if (props.isEs6) { %>-t babelify<% } %> | tap-spec",<% } %><% if (props.isServer || props.isCLI && !props.isBrowser) { %>
    "test": "<% if (props.isEs6) { %>babel-node<% } else { %>node<% } %> test/test<%= props.extension %> | tap-spec",
    "tdd": "nodemon -x npm -i node_modules/ -- run test",<% if (props.isEs6) { %>
    "watch": "babel index.js --watch --out-file index.es5",<% } %><% } %>
    "note1": "we can't have nice things. prepublish also runs on npm install https://github.com/npm/npm/issues/6394 in-publish hacks around this",
    "prepublish": "in-publish && npm prune && npm run gitPush || in-install",
    "note2": "eslint will always pull from the global eslintrc file, disable that so that we're only looking at the local",
    "note3": "travis doesn't play nicely with !#/bin/bash in the script file, so we have to explicitly set bash",
    "lint": "/bin/bash -c 'source ./scripts.sh && lint'",
    "note4": "the diff-filter option below gets all files but deleted ones",
    "lint-staged": "git diff --diff-filter=ACMRTUXB --cached --name-only | grep '.*\\.<%= props.extension %>$' | grep -v 'node_modules' | xargs eslint --ext .js --ext <%= props.extension %>",
    "requireGitClean": "/bin/bash -c 'source ./scripts.sh && git_require_clean_work_tree'",
    "nsp": "nsp audit-package",
    "note5": "--no-verify skips the commit hook",
    "dmn": "dmn gen -f . && if [[ $(git diff --shortstat 2> /dev/null | tail -n1) != '' ]]; then git add .npmignore && git commit --no-verify -m'update npmignore'; fi",
    "doctoc": "doctoc README.md && if [ -f CONTRIBUTING.md ]; then doctoc CONTRIBUTING.md; fi && if [[ $(git diff --shortstat -- README.md 2> /dev/null | tail -n1) != '' || $(git diff --shortstat -- CONTRIBUTING.md 2> /dev/null | tail -n1) != '' ]]; then git add README.md CONTRIBUTING.md && git commit --no-verify -m'table of contents update'; fi",
    "gitPull": "git pull --rebase origin master",
    "gitPush": "git push --follow-tags --no-verify && git push --tags --no-verify",<% if (props.isEs6) { %>
    "build-es5": "NODE_ENV=production && babel index<%= props.extension %> > index.es5",<% } %>
    "release": "f () { source ./scripts.sh && npm run requireGitClean && npm run gitPull && npm run dmn && npm run doctoc <% if (props.isEs6) { %>&& npm run build-es5 <% } %>&& npm run lint && npm test && npm_release <%= publicness %> $@; }; f"
  },
  "config": {
    "notes": "important to correct the path of npm so that the git hook doesn't error",
    "ghooks": {
      "pre-commit": "PATH=$PATH:/usr/local/bin:/usr/local/sbin && npm run lint-staged",
      "pre-push": "PATH=$PATH:/usr/local/bin:/usr/local/sbin && npm run dmn && npm run doctoc && npm run lint && npm test",
      "update": "PATH=$PATH:/usr/local/bin:/usr/local/sbin && npm install"
    }
  },
  "main": "index<% if (props.isEs6) { %>.es5<% } else { %><%= props.extension %><% } %>",<% if (props.isBrowser) { %>
  "browser": "index<% if (props.isEs6) { %>.es5<% } else { %><%= props.extension %><% } %>",<% } %><% if (props.isCLI) { %>
  "bin": {
    "<%= repoName %>": "bin/<%= repoName %>"
  },<% } %>
  "devDependencies": {<% if (props.isEs6) { %>
    "babel": "^5.2.9",<% } %><% if (props.isBrowser) { %><% if (props.isEs6) { %>
    "babelify": "^6.0.2",<% } %>
    "browserify": "^9.0.8",<% } %>
    "dmn": "^1.0.5",
    "doctoc": "^0.13.0",
    "eslint": "^0.20.0",<% if (props.isBrowser && props.isEs6) { %>
    "eslint-plugin-react": "^2.0.0",<% } %>
    "ghooks": "^0.3.2",
    "in-publish": "^1.1.1",<% if (props.isServer || props.isCLI) { %>
    "nodemon": "^1.2.1",<% } %>
    "nsp": "^1.0.1",
    "sinon": "^1.12.2",<% if (props.isBrowser) { %>
    "smokestack": "^3.2.0",
    "smokestack-watch": "^0.4.1",
    "tap-closer": "^1.0.0",<% } %>
    "tap-spec": "^3.0.0",
    "tape": "^4.0.0"
  }
}
